sums: THEORY
BEGIN
 n: VAR nat

 sum(n): RECURSIVE nat =
  IF n = 0 THEN 0 ELSE n + sum(n - 1) ENDIF
  MEASURE n

 closed_form: THEOREM sum(n) = (n * (n + 1))/2

 bad_closed_form: THEOREM sum(n) = (n * (n - 1))/2

 sos(n): RECURSIVE nat =
  IF n = 0 THEN 0 ELSE n*n + sos(n - 1) ENDIF
  MEASURE n

 sos_closed_form: THEOREM sos(n) = (n * (n + 1) * (2*n + 1)) / 6

 f: var [nat -> nat]
 i: var nat

 fsum(f)(n): RECURSIVE nat =
  IF n = 0 THEN 0 ELSE f(n) + fsum(f)(n - 1) ENDIF
  MEASURE n

 fsos_closed_form: THEOREM
   fsum(Î» i: i * i)(n) = (n * (n + 1) * (2*n + 1)) / 6

END sums
